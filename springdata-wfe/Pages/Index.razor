@page "/"

@using springdata_wfe.Data
@using springdata_common.Models
@inject EmployeeService EmployeeService

<p>This is a test application built to demonstrate the CI/CD process to Azure App Service Containers on Linux.</p>

<h1>Employees</h1>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emplooyee in employees)
            {
                <tr>
                    <td>@emplooyee.Id</td>
                    <td>@emplooyee.FirstName</td>
                    <td>@emplooyee.LastName</td>
                    <td>@emplooyee.Age</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (addingInProgress)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <h3>Create Employee</h3>
        <label class="alert-danger">@errorMessage</label><br />
        <label>First Name</label>
        <input placeholder="First Name" @bind="firstName" required /><br />
        <label>Last Name</label>
        <input placeholder="Last Name" @bind="lastName" required /><br />
        <label>Age</label>
        <input placeholder="Age" type="number" @bind="age" required min="0" max="120" /><br />
        <button @onclick="AddEmployee">Create Employee</button>
    </div>
}

@code {
    private Employee[] employees;
    private bool addingInProgress;
    private string errorMessage;
    private string firstName;
    private string lastName;
    private int age;


    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetEmployeesAsync();
    }

    private async Task AddEmployee()
    {
        this.addingInProgress = true;
        var addingSuccess = false;

        try
        {
            if (!string.IsNullOrEmpty(firstName) && !string.IsNullOrEmpty(lastName))
            {
                var employee = new Employee() { FirstName = firstName, LastName = lastName, Age = age };
                var createdEmployee = await EmployeeService.AddEmployeesAsync(employee);
                if (createdEmployee != null)
                    addingSuccess = true;
                employees = await EmployeeService.GetEmployeesAsync();
            }
            else
            {
                errorMessage = "First name and Last name are required.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occured. " + ex.Message;
            // Handle exception
        }

        if (addingSuccess)
        {
            firstName = string.Empty;
            lastName = string.Empty;
            errorMessage = string.Empty;
            age = 0;
        }

        this.addingInProgress = false;
    }
}
